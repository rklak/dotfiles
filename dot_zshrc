# If you come from bash you might have to change your $PATH.
export PATH=/opt/homebrew/bin:/usr/local/bin:$PATH
zstyle :omz:plugins:keychain agents gpg,ssh
zstyle :omz:plugins:keychain identities id_rklak C9C883263380855C
zstyle :omz:plugins:keychain options --quiet
# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"
export PAGER="less"
export JIRA_URL="https://headstart.atlassian.net"
unset NPM_CONFIG_PREFIX
scripts="$HOME/scripts"
projects="$HOME/projects"
# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="robbyrussell"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(ansible keychain gpg-agent docker docker-compose git jira tmux tmuxinator vi-mode fzf wd terraform)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi
export EDITOR='nvim'

export PATH=$HOME/bin:/usr/local/bin:$HOME/.local/bin:$PATH

# vi mode
bindkey -v
export VI_MODE_SET_CURSOR=true

if [[ "$(uname)" == "Darwin" ]]; then
  export BLJ="blueutil --connect 74:5C:4B:01:B3:8D"
  export BLS="blueutil --connect 00:16:94:26:97:71"
  export DBLS="blueutil --disconnect 00:16:94:26:97:71"
elif [[ "$(uname)" == "Linux" ]]; then
  export BLJ="bluetoothctl connect 74:5C:4B:01:B3:8D"
  export BLS="bluetoothctl connect 00:16:94:26:97:71"
  export DBLS="bluetoothctl disconnect 00:16:94:26:97:71"
else
  echo "Unsupported OS"
fi

alias blj="$BLJ" # jabra
alias bls="$BLS" # sennheiser
alias dbls="$DBLS" # sennheiser
alias rebls="dbls && bls" # sennheiser
alias slu="pactl set-default-sink bluez_sink.00_16_94_26_97_71.a2dp_sink"
alias fd=fdfind

alias dcupdfr="dcupd --force-recreate"

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# edit configs
alias ezsh="nvim $HOME/.zshrc"
alias eas="nvim $HOME/.aerospace.toml"
alias ei3="nvim $HOME/.config/i3/config"
alias ewt="nvim $HOME/.config/wezterm/wezterm.lua"
alias etmux="tmuxconf"
alias envim="nvim $HOME/.config/nvim/"

# global
alias ag="alias | grep"
alias pbcopy='xclip -selection clipboard'
alias pbpaste='xclip -selection clipboard -o'
alias scripting="nvim $scripts"
alias wda='wd add -f'
alias wdaj='wda j'
alias wdak='wda k'
alias wdal='wda l'
alias wdj='wd j'
alias wdk='wd k'
alias wdl='wd l'

# ansible
alias anow='ansible-playbook -bK --tags now local.yml'

# npm
alias nrw="npm run watch"
alias nrs="npm run start"
alias nru="npm run units"
alias nruw="$scripts/lib/run_watch.sh && npm run units-watch"
alias nri="npm run integration-no-log"
alias nriw="$scripts/lib/run_watch.sh && npm run integration-no-log -- --watch"
alias nrp="npm run plop"
alias nrd="npm run dev"
alias nrt="npm run test"
alias nrc="npm run coverage"
alias nrrm="npm run run-migrations"
alias nrgm="npm run generate-migration"

# n-fundamentals-pro
alias tnfp="txs nfp"
alias pro="cd $projects"

# orca
alias toro="txs oro"

# lux
alias tlapi="txs lapi"
alias tlsls="txs lsls"
alias tlspa="txs lspa"
alias lux="tlapi false && tlspa false && tlapi"
alias apid="cd $HOME/api/"
alias gettoken="$scripts/token.sh"
alias gettokenstaging="$scripts/token_staging.sh"
alias rapi="$scripts/run_api.sh"
alias rspa="$scripts/run_spa.sh"
alias capi="$scripts/close_api.sh"
alias cspa="$scripts/close_spa.sh"
alias reapi="capi && rapi"
alias respa="cspa && rspa"
alias cpro="$scripts/create_project.sh"
alias apii="$scripts/api_init.sh"
alias spai="$scripts/spa_init.sh"
alias cdoc="$scripts/close_docker.sh"
alias fapi="cdoc && apii && rapi"

# git
alias glc="git log --pretty=%B"
alias gwti="$scripts/worktree_init.sh"
alias gwtn="ddev && cd .. && gfo && source $scripts/gwta.sh"
alias gwtc="$scripts/clear_worktree.sh"
alias cam="$scripts/git_commit.sh"

# worktree
alias ddev="source $scripts/cd_develop.sh"

# chromium
export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
export PUPPETEER_EXECUTABLE_PATH=`which chromium`

# multimonitor
alias lapoff="xrandr --output eDP-1 --off"
alias lapon="xrandr --output eDP-1 --auto"

# eza auto completion
export FPATH="~/eza/eza/completions/zsh:$FPATH"
alias ls='eza --grid --color auto --icons --sort=type'
alias ll='eza --long --color always --icons --sort=type'
alias la='eza --grid --all --color auto --icons --sort=type'
alias lla='eza --long --all --color auto --icons --sort=type'

alias jstag='while true; do
    timeout 120 ssh -i ~/rds/rds-jump-host.pem -N -L 5432:xxxxx:5432 ec2-user@ec2-xxxx.eu-west-1.compute.amazonaws.com
done'

alias pstag='pgcli postgresql://xxx --auto-vertical-output'

alias pl='pgcli postgresql://postgres:password@localhost:5432/app --auto-vertical-output'

# INFO: pet register the previous command
alias hl='fc -lrn | head -n 1 | pbcopy'
function prev() {
  PREV=$(fc -lrn | head -n 1)
  sh -c "pet new `printf %q "$PREV"`"
}
function pet-select() {
  BUFFER=$(pet search --query "$LBUFFER")
  CURSOR=$#BUFFER
  zle redisplay
}
zle -N pet-select
stty -ixon
bindkey '^s' pet-select

# chezmoi
alias chezmoic="cd $HOME/.local/share/chezmoi"
alias chezmoir="chezmoi re-add"

### MANAGED BY RANCHER DESKTOP START (DO NOT EDIT)
export PATH="$HOME/.rd/bin:$PATH"
### MANAGED BY RANCHER DESKTOP END (DO NOT EDIT)

source $(brew --prefix)/share/zsh-autosuggestions/zsh-autosuggestions.zsh
